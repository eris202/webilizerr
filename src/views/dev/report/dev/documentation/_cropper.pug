#cropper.panel
	.panel-header
		h3.panel-title Cropper.js
	.panel-body
		p Cropper.js is a plugin for cropping images.
		p Plugin and style sheets linking occurs when the element that matches the #[code [data-cropper-container&#93;] selector is present on the page.

		p Plugin operation example:
		.mt-1( data-cropper-container )
			.img-container
				img( src='images/logo-300x300.png', alt='Sample Picture' )
			.mt-1.text-center
				.btn-group
					button.btn.btn-success.fa-arrows( data-cropper!={ setDragMode: 'move' }, title="Drag mode: move" )
					button.btn.btn-success.fa-crop( data-cropper!={ setDragMode: 'crop' }, title="Drag mode: crop" )
					button.btn.btn-success.fa-search-plus( data-cropper!={ zoom: 0.1 }, title="Zoom: +0.1" )
					button.btn.btn-success.fa-search-minus( data-cropper!={ zoom: -0.1 }, title="Zoom: -0.1" )
					button.btn.btn-success.fa-refresh( data-cropper!={ reset: null }, title="Reset" )

		p An extended example of plugin operation can be seen on the following page: #[a( href='image-tools.html' ) Image Tools].

		p Markup example:
		pre.highlight.html.scroller.scroller-horizontal
			= '<div data-cropper-container>\n'
			= '  <div class="img-container"><img src="images/logo-300x300.png" alt="Sample Picture"></div>\n'
			= '  <button data-cropper=\'{ "setDragMode": "move" }\'>Drag mode: move</button>\n'
			= '  <button data-cropper=\'{ "setDragMode": "crop" }\'>Drag mode: crop</button>\n'
			= '  <button data-cropper=\'{ "zoom": 0.1 }\'>Zoom: +0.1</button>\n'
			= '  <button data-cropper=\'{ "zoom": -0.1 }\'>Zoom: -0.1</button>\n'
			= '  <button data-cropper=\'{ "reset": null }\'>Reset</button>\n'
			= '</div>'

		p #[code cropper] component implies a mandatory availability of an element matching the #[code .img-container img] selector.
		p The template provides a #[code data-cropper] attribute for managing the Cropper.js plugin. It accepts a JSON object with parameters matching methods of the plugin, and parameter values that will be passed to a method, e.g.: #[code data-cropper='{ "setDragMode": "move" }'] matches #[code cropper.setDragMode( 'move' )]. This attribute works only with the elements that are located in a #[code data-cropper-container] container.
		p Next values of a #[code data-cropper] attribute that apply to buttons are provided:
		ul
			li #[code { "setDragMode": "move" }]
			li #[code { "setDragMode": "crop" }]
			li #[code { "zoom": 0.1 }]
			li #[code { "zoom": -0.1 }]
			li #[code { "rotate": -45 }]
			li #[code { "rotate": 45 }]
			li #[code { "scaleX": -1 }]
			li #[code { "scaleY": -1 }]
			li #[code { "disable": null }]
			li #[code { "enable": null }]
			li #[code { "clear": null }]
			li #[code { "reset": null }]
			li #[code { "destroy": null }]
			li #[code { "setAspectRatio": 1.7777777777777777 }]
			li #[code { "setAspectRatio": 1.3333333333333333 }]
			li #[code { "setAspectRatio": 1 }]
			li #[code { "setAspectRatio": 0.6666666666666666 }]
			li #[code { "setAspectRatio": null }]
			li #[code { "viewMode": 0 }]
			li #[code { "viewMode": 1 }]
			li #[code { "viewMode": 2 }]
			li #[code { "viewMode": 3 }]
			li #[code { "getCroppedCanvas": { maxWidth: 4096, maxHeight: 4096 }, target: "#modal" }]
			li #[code { "getCroppedCanvas": { width: 160, height: 90 }, target: "#modal" }]
			li #[code { "getCroppedCanvas": { width: 320, height: 180 }, target: "#modal" }]
			li #[code { "getData": null, target: "#cropper-input" }]
			li #[code { "setData": null, target: "#cropper-input" }]
			li #[code { "getContainerData": null, target: "#cropper-input" }]
			li #[code { "getImageData": null, target: "#cropper-input" }]
			li #[code { "getCanvasData": null, target: "#cropper-input" }]
			li #[code { "setCanvasData": null, target: "#cropper-input" }]
			li #[code { "getCropBoxData": null, target: "#cropper-input" }]
			li #[code { "setCropBoxData": null, target: "#cropper-input" }]

		p Next values of a #[code data-cropper] attribute that apply to checkboxes are provided:
		ul
			li #[code { "responsive": "checkbox" }]
			li #[code { "restore": "checkbox" }]
			li #[code { "checkCrossOrigin": "checkbox" }]
			li #[code { "checkOrientation": "checkbox" }]
			li #[code { "modal": "checkbox" }]
			li #[code { "guides": "checkbox" }]
			li #[code { "center": "checkbox" }]
			li #[code { "highlight": "checkbox" }]
			li #[code { "background": "checkbox" }]
			li #[code { "autoCrop": "checkbox" }]
			li #[code { "movable": "checkbox" }]
			li #[code { "rotatable": "checkbox" }]
			li #[code { "scalable": "checkbox" }]
			li #[code { "zoomable": "checkbox" }]
			li #[code { "zoomOnTouch": "checkbox" }]
			li #[code { "zoomOnWheel": "checkbox" }]
			li #[code { "cropBoxMovable": "checkbox" }]
			li #[code { "cropBoxResizable": "checkbox" }]
			li #[code { "toggleDragModeOnDblclick": "checkbox" }]

		p All available plugin parameters and their description can be viewed in #[a( href="https://github.com/fengyuanchen/cropperjs#cropperjs" ) GitHub repository].
